{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Service {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:8080';\n  }\n  getPatients() {\n    return this.http.get(`${this.apiServerUrl}/patient/all`);\n  }\n  addPatient(patient) {\n    return this.http.post(`${this.apiServerUrl}/patient/add`, patient);\n  }\n  updatePatient(patient) {\n    return this.http.put(`${this.apiServerUrl}/patient/update`, patient);\n  }\n  deletePatient(id) {\n    return this.http.delete(`${this.apiServerUrl}/patient/delete/${id}`);\n  }\n}\nService.ɵfac = function Service_Factory(t) {\n  return new (t || Service)(i0.ɵɵinject(i1.HttpClient));\n};\nService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Service,\n  factory: Service.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Service","constructor","http","apiServerUrl","getPatients","get","addPatient","patient","post","updatePatient","put","deletePatient","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\houss\\Desktop\\ManagerApp\\Angular\\odmanagerapp\\src\\app\\patient.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Patient } from './patient'\r\n\r\n@Injectable ({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class Service{\r\n    private apiServerUrl='http://localhost:8080';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public getPatients(): Observable<Patient[]> {\r\n        return this.http.get<Patient[]>(`${this.apiServerUrl}/patient/all`);\r\n    }\r\n\r\n    public addPatient(patient: Patient): Observable<Patient> {\r\n        return this.http.post<Patient>(`${this.apiServerUrl}/patient/add`,patient);\r\n    }\r\n    \r\n\r\n    public updatePatient(patient: Patient): Observable<Patient> {\r\n        return this.http.put<Patient>(`${this.apiServerUrl}/patient/update`,patient);\r\n    }\r\n\r\n    public deletePatient(id: number): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiServerUrl}/patient/delete/${id}`);\r\n    }\r\n\r\n\r\n}"],"mappings":";;AASA,OAAM,MAAOA,OAAO;EAGhBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAC,uBAAuB;EAEL;EAEhCC,WAAWA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,YAAY,cAAc,CAAC;EACvE;EAEOG,UAAUA,CAACC,OAAgB;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,GAAG,IAAI,CAACL,YAAY,cAAc,EAACI,OAAO,CAAC;EAC9E;EAGOE,aAAaA,CAACF,OAAgB;IACjC,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,YAAY,iBAAiB,EAACI,OAAO,CAAC;EAChF;EAEOI,aAAaA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,YAAY,mBAAmBS,EAAE,EAAE,CAAC;EAC9E;;AApBSZ,OAAO,C;mBAAPA,OAAO,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAPjB,OAAO,C;SAAPA,OAAO;EAAAkB,OAAA,EAAPlB,OAAO,CAAAmB,IAAA;EAAAC,UAAA,EAHJ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}